import { Box, Button } from '@mui/material';
import * as React from 'react';
import MenuHoverDropdown from './MenuHoverDropdown';
function App() {
  return <>

    <Box sx={{
      margin: "100px"
    }}>
      <MenuHoverDropdown Button={<Button variant="outlined">Sản phẩm</Button>} >
        <Box>
          <Box>randomCharacter</Box>
          <Box>randomCharacter</Box>
          <Box>randomCharacter</Box>
        </Box>
      </MenuHoverDropdown>
    </Box>
  </>;
}

export default App



import { Box, Paper } from '@mui/material';
import { useEffect, useRef, useState } from 'react';

export function randomCharacter(length) {
    let result = [];
    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let charactersLength = characters.length;
    for (let i = 0; i < length; i++) {
        result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));
    }
    return result.join('').toLowerCase();
}

function MenuHoverDropdown(props) {
    const classNameEl = "DropdownMenu-" + randomCharacter(15)
    const classNamePaper = "DropdownMenuPaper-" + randomCharacter(15)
    const refBtn = useRef(null)
    const [widthPoper, setWidthPoper] = useState(0)

    useEffect(() => {
        if (!refBtn?.current) return 0
        let widthPoper = (refBtn.current?.offsetWidth / 2) - 10
        setWidthPoper(widthPoper)
    }, [refBtn.current])


    return (
        <Box key={randomCharacter(15)} ref={refBtn} sx={{
            position: "relative",
            display: "inline-block",
            [`&:hover .${classNamePaper}`]: {
                display: "block",
            },
            [`& .${classNamePaper}`]: {
                display: "none",
                minWidth: '280px',
                position: "absolute",
                top: "calc(100%  +  10px)",
                left: 0,
                boxShadow: "none",
                border: "1px solid red",
                "&:after": {
                    content: "''",
                    position: "absolute",
                    top: "-20px",
                    left: widthPoper,
                    borderWidth: "10px",
                    borderStyle: "solid",
                    borderColor: "transparent transparent red transparent",
                },
                "&:before": {
                    content: "''",
                    position: "absolute",
                    top: "-14px",
                    left: 0,
                    width: "100%",
                    height: "16px",
                    backgroundColor: "transparent"
                }
            }
        }}>
            {props?.Button}
            <Box className={classNameEl}>
                <Paper elevation={3} className={classNamePaper}>
                    {props?.children}
                </Paper>
            </Box>
        </Box>
    );
}

export default MenuHoverDropdown;
